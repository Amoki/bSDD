<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[22X$Y0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_PrecastConcreteElementGeneral</value>
  </data>
  <data name="PSet.Definition[22X$Y0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>Production and manufacturing related properties common to different types of precast concrete elements. The Pset can be used by a number of subtypes of IfcBuildingElement. If the precast concrete element is a sandwich wall panel each structural layer or shell represented by an IfcBuildingElementPart may be attached to a separate Pset of this type, if needed. Some of the properties apply only for specific types of precast concrete elements.</value>
  </data>
  <data name="Property.TypeDesignator.Name[2KQPk0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>TypeDesignator</value>
  </data>
  <data name="Property.TypeDesignator.Definition[2KQPk0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.</value>
  </data>
  <data name="Property.CornerChamfer.Name[]" xml:space="preserve">
    <value>CornerChamfer</value>
  </data>
  <data name="Property.CornerChamfer.Definition[]" xml:space="preserve">
    <value>The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.</value>
  </data>
  <data name="Property.ManufacturingToleranceClass.Name[]" xml:space="preserve">
    <value>ManufacturingToleranceClass</value>
  </data>
  <data name="Property.ManufacturingToleranceClass.Definition[]" xml:space="preserve">
    <value>Classification designation of the manufacturing tolerances according to local standards.</value>
  </data>
  <data name="Property.FormStrippingStrength.Name[2x9z80qVGHuO00025QrE$V]" xml:space="preserve">
    <value>FormStrippingStrength</value>
  </data>
  <data name="Property.FormStrippingStrength.Definition[2x9z80qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The minimum required compressive strength of the concrete at form stripping time.</value>
  </data>
  <data name="Property.LiftingStrength.Name[31jac0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>LiftingStrength</value>
  </data>
  <data name="Property.LiftingStrength.Definition[31jac0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The minimum required compressive strength of the concrete when the concrete element is lifted.</value>
  </data>
  <data name="Property.ReleaseStrength.Name[39TUu0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>ReleaseStrength</value>
  </data>
  <data name="Property.ReleaseStrength.Definition[39TUu0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.</value>
  </data>
  <data name="Property.MinimumAllowableSupportLength.Name[3FQyy0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>MinimumAllowableSupportLength</value>
  </data>
  <data name="Property.MinimumAllowableSupportLength.Definition[3FQyy0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The minimum allowable support length.</value>
  </data>
  <data name="Property.InitialTension.Name[3L_aQ0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>InitialTension</value>
  </data>
  <data name="Property.InitialTension.Definition[3L_aQ0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The initial stress of the tendon. This property applies to prestressed concrete elements only.</value>
  </data>
  <data name="Property.TendonRelaxation.Name[3Ry2U0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>TendonRelaxation</value>
  </data>
  <data name="Property.TendonRelaxation.Definition[3Ry2U0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.</value>
  </data>
  <data name="Property.TransportationStrength.Name[3XJN80qVGHuO00025QrE$V]" xml:space="preserve">
    <value>TransportationStrength</value>
  </data>
  <data name="Property.TransportationStrength.Definition[3XJN80qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The minimum required compressive strength of the concrete required for transportation.</value>
  </data>
  <data name="Property.SupportDuringTransportDescription.Name[3dGrC0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>SupportDuringTransportDescription</value>
  </data>
  <data name="Property.SupportDuringTransportDescription.Definition[3dGrC0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>Textual description of how the concrete element is supported during transportation.</value>
  </data>
  <data name="Property.SupportDuringTransportDocReference.Name[3jEJG0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>SupportDuringTransportDocReference</value>
  </data>
  <data name="Property.SupportDuringTransportDocReference.Definition[3jEJG0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>Reference to an external document defining how the concrete element is supported during transportation.</value>
  </data>
  <data name="Property.HollowCorePlugging.Name[3mD2I0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>HollowCorePlugging</value>
  </data>
  <data name="Property.HollowCorePlugging.Definition[3mD2I0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.</value>
  </data>
  <data name="Property.CamberAtMidspan.Name[3smfm0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>CamberAtMidspan</value>
  </data>
  <data name="Property.CamberAtMidspan.Definition[3smfm0qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.</value>
  </data>
  <data name="Property.BatterAtStart.Name[3xXr00qVGHuO00025QrE$V]" xml:space="preserve">
    <value>BatterAtStart</value>
  </data>
  <data name="Property.BatterAtStart.Definition[3xXr00qVGHuO00025QrE$V]" xml:space="preserve">
    <value>The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.</value>
  </data>
  <data name="Property.BatterAtEnd.Name[00v9g0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>BatterAtEnd</value>
  </data>
  <data name="Property.BatterAtEnd.Definition[00v9g0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.</value>
  </data>
  <data name="Property.Twisting.Name[06sdk0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Twisting</value>
  </data>
  <data name="Property.Twisting.Definition[06sdk0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the ‘warping’ angle.</value>
  </data>
  <data name="Property.Shortening.Name[0CDyO0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Shortening</value>
  </data>
  <data name="Property.Shortening.Definition[0CDyO0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.</value>
  </data>
  <data name="Property.PieceMark.Name[0IBQS0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>PieceMark</value>
  </data>
  <data name="Property.PieceMark.Definition[0IBQS0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type ‘1’ and specific shape ‘A’).</value>
  </data>
  <data name="Property.DesignLocationNumber.Name[0O8uW0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>DesignLocationNumber</value>
  </data>
  <data name="Property.DesignLocationNumber.Definition[0O8uW0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Defines a unique location within a structure, the ‘slot’ for which the piece was designed.</value>
  </data>
</root>