<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[35e9Q0qWaHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[35e9Q0qWaHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.Reference.Name[3A$U40qWaHuO00025QrE$V]" xml:space="preserve">
    <value>参照記号</value>
  </data>
  <data name="Property.Reference.Definition[3A$U40qWaHuO00025QrE$V]" xml:space="preserve">
    <value>このプロジェクトにおける参照記号(例：A-1)。分類コードではなく内部で使用されるプロジェクトタイプとして使用されるもの。</value>
  </data>
  <data name="Property.Status.Name[3I9Ey0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="Property.Status.Definition[3I9Ey0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>要素（主にリノベーションまたは改修プロジェクトにおいて）の状態。 状態は、「新規(New)」－新しく追加される要素。「既存」－要素は存在し、かつ残りもの。「破壊」－要素は存在したが、廃棄されるもの。「一時的」－一時的に存在する要素（一時的にサポートしている構造のようなもの）。</value>
  </data>
  <data name="Property.PlacementType.Name[3f$7C0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>プレースメントタイプ</value>
  </data>
  <data name="Property.PlacementType.Definition[3f$7C0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>暖房用ヒーターが置かれるようにどう設計されているかを示します。</value>
  </data>
  <data name="Property.TemperatureClassification.Name[3xtXO0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>温度分類</value>
  </data>
  <data name="Property.TemperatureClassification.Definition[3xtXO0qWaHuO00025QrE$V]" xml:space="preserve">
    <value>暖房用ヒーター表面温度の温度分類を定義。低温タイプ-お湯またｈ電気によるものの表面温度は相対的に低い。高温タイプ-ガスまたは蒸気によって熱するタイプの表面温度は比較的高い。</value>
  </data>
  <data name="Property.HeatTransferDimension.Name[3uVUmsfS95nx1mC8f2WtcD]" xml:space="preserve">
    <value>熱伝達値</value>
  </data>
  <data name="Property.HeatTransferDimension.Definition[3uVUmsfS95nx1mC8f2WtcD]" xml:space="preserve">
    <value>室内暖房機の形に従って熱がどう伝えられるかを示します。</value>
  </data>
  <data name="Property.HeatTransferMedium.Name[0KviS0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>熱媒体</value>
  </data>
  <data name="Property.HeatTransferMedium.Definition[0KviS0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>列挙体は熱媒体を必要に応じて定義します。</value>
  </data>
  <data name="Property.EnergySource.Name[0XQn_0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>エネルギー源</value>
  </data>
  <data name="Property.EnergySource.Definition[0XQn_0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>列挙型はエネルギー源や燃料該当する場合は熱を発生させる燃焼定義します。注：温水循環式のヒーターはunsetを使用してはならない。デュアル使用すると、温水循環式の電気ヒーターは電気を使用しなければならない。</value>
  </data>
  <data name="Property.BodyMass.Name[1FK6G0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>本体重量</value>
  </data>
  <data name="Property.BodyMass.Definition[1FK6G0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>ヒーターの全体的な質量</value>
  </data>
  <data name="Property.ThermalMassHeatCapacity.Name[1Ng9y0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>保有熱容量</value>
  </data>
  <data name="Property.ThermalMassHeatCapacity.Definition[1Ng9y0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>質量あたりの熱容量</value>
  </data>
  <data name="Property.OutputCapacity.Name[1Tde00qWeHuO00025QrE$V]" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="Property.OutputCapacity.Definition[1Tde00qWeHuO00025QrE$V]" xml:space="preserve">
    <value>メーカーによりリストアップされた公称熱出力</value>
  </data>
  <data name="Property.ThermalEfficiency.Name[1Zb640qWeHuO00025QrE$V]" xml:space="preserve">
    <value>熱効率</value>
  </data>
  <data name="Property.ThermalEfficiency.Definition[1Zb640qWeHuO00025QrE$V]" xml:space="preserve">
    <value>熱効率：熱伝導装置の総エネルギー出力/エネルギー入力として総合的な熱効率は定義される。</value>
  </data>
  <data name="Property.NumberOfPanels.Name[1j7Sa0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>パネルの数</value>
  </data>
  <data name="Property.NumberOfPanels.Definition[1j7Sa0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>パネルの数</value>
  </data>
  <data name="Property.NumberOfSections.Name[1oUnE0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>セクションの数</value>
  </data>
  <data name="Property.NumberOfSections.Definition[1oUnE0qWeHuO00025QrE$V]" xml:space="preserve">
    <value>流れ方向で測定した垂直方向のセクションの数</value>
  </data>
</root>