<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[1wkrg0qTeHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[1wkrg0qTeHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.ElectricalSystemType.Name[206AK0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>電気システム方式</value>
  </data>
  <data name="Property.ElectricalSystemType.Definition[206AK0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>IEC60364電気基準に定義した電気接地の方式。電気設備の種類、接地電極と設備の導電性部分の種類で決められる。具体的なには、IEC60364に下記のような方法がある：- TNシステム：電気設備は一点或いは多点の接地点を持ち、直接接地されるシステム。設備と接地極の導電性部分は保護されていること。- TN　Cシステム：系統の全てにわたって、中性線と保護導体が一つの導体のTNシステム。- TN　Sシステム：系統の全てにわたって、独立の中性線と保護導体を有するTNシステム。- TN　C　Sシステム：系統の一部では、中性線と保護導体が一つの導体のTNシステム。- TTシステム：一点を大地に直接接続し、電力系統の接地とは無関係に、設備の露出導電性部分を大地に直接接地すること。- ITシステム：電力システムを大地(接地)から絶縁する、設備の露出導電性部分を大地に直接接地すること。</value>
  </data>
  <data name="Property.ElectricalSystemCategory.Name[2GoHi0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>電気システムのカテゴリー</value>
  </data>
  <data name="Property.ElectricalSystemCategory.Definition[2GoHi0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>IECに準拠した回路の電圧レンジを示す。次の列挙型の値を取る。(HIGHVOLTAGE indicates &gt;1000V AC or &gt;1500V DV; LOWVOLTAGE indicates 50-1000V AC or 120-1500V DC; EXTRALOWVOLTAGE indicates &lt;50V AC or &lt;120V DC.)</value>
  </data>
  <data name="Property.Diversity.Name[2V5pS0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>負荷率</value>
  </data>
  <data name="Property.Diversity.Definition[2V5pS0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>ある期間中同じ回路にある複数電気設備の同時最大負荷と各設備の合計負荷の比率。</value>
  </data>
  <data name="Property.NumberOfLiveConductors.Name[1kC$kDKsr14hhEEn_eyHK8]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.NumberOfLiveConductors.Definition[1kC$kDKsr14hhEEn_eyHK8]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.MaximumAllowedVoltageDrop.Name[2fEJM0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>最大許容電圧降下</value>
  </data>
  <data name="Property.MaximumAllowedVoltageDrop.Definition[2fEJM0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>電気回路での電圧降下は最大電圧降下を超えないように。二種類の電圧降下限度があり、一つは分岐－主回路、もう一つは各分電盤或いは末端回路の電気需要装置と接続電気盤である。総電圧下降を使用範囲以内に制限する。デフォルト値は分岐－主回路1.5％、末端回路2.5％、合計総電圧4％である。注：この値はIFCモデルでの制約値と指定されているが、現段階ではプロプティセットに設定する。将来的には必要な性能として各ソフトアプリケションに利用する。</value>
  </data>
  <data name="Property.NetImpedance.Name[2j$Uc0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>ネットインピーダンス</value>
  </data>
  <data name="Property.NetImpedance.Definition[2j$Uc0qTeHuO00025QrE$V]" xml:space="preserve">
    <value>電気回路での最大接地インピーダンス（一般はZsで表示）。55℃ (130°F)での数値。</value>
  </data>
</root>