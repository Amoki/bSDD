<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.ConnectionType.Name[0zLSs0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>接続タイプ</value>
  </data>
  <data name="Property.ConnectionType.Definition[0zLSs0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>配管ポートの加工方式：- BRAZED: ろう型- COMPRESSION: 圧縮型 - FLANGED:フランジ型- GROOVED: 溝型. - OUTSIDESLEEVE: 外側スリーブ型- SOLDERED: ハンダ型- SWEDGE:  Swedge？Sくさび型？ - THREADED: ねじ型- WELDED: 溶接型 - OTHER: その他- NONE: なし.- USERDEFINED:ユーザー定義タイプ- NOTDEFINED: 不確定タイプ</value>
  </data>
  <data name="Property.ConnectionSubType.Name[1ICc40qTWHuO00025QrE$V]" xml:space="preserve">
    <value>接続サブタイプ</value>
  </data>
  <data name="Property.ConnectionSubType.Definition[1ICc40qTWHuO00025QrE$V]" xml:space="preserve">
    <value>物理ポート接続のサブタイプ。接続タイプ以外の情報を設定する場合に使用。</value>
  </data>
  <data name="Property.NominalDiameter.Name[1OmDY0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>呼び径</value>
  </data>
  <data name="Property.NominalDiameter.Definition[1OmDY0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>配管の公称直径。</value>
  </data>
  <data name="Property.InnerDiameter.Name[1ZUss0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>内径</value>
  </data>
  <data name="Property.InnerDiameter.Definition[1ZUss0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>配管の実内径。</value>
  </data>
  <data name="Property.OuterDiameter.Name[1jdMm0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>外径</value>
  </data>
  <data name="Property.OuterDiameter.Definition[1jdMm0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>配管の実外径。</value>
  </data>
  <data name="Property.Temperature.Name[1paqq0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>温度</value>
  </data>
  <data name="Property.Temperature.Definition[1paqq0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流体の温度。</value>
  </data>
  <data name="Property.VolumetricFlowRate.Name[1xKl60qTWHuO00025QrE$V]" xml:space="preserve">
    <value>体積流量</value>
  </data>
  <data name="Property.VolumetricFlowRate.Definition[1xKl60qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流体の体積流量。</value>
  </data>
  <data name="Property.MassFlowRate.Name[234fO0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>質量流量</value>
  </data>
  <data name="Property.MassFlowRate.Definition[234fO0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流体の質量流量。</value>
  </data>
  <data name="Property.FlowCondition.Name[28R_20qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流動状態</value>
  </data>
  <data name="Property.FlowCondition.Definition[28R_20qTWHuO00025QrE$V]" xml:space="preserve">
    <value>断面の充満率で流動状態を定義する。</value>
  </data>
  <data name="Property.Velocity.Name[2Fbkw0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>速度</value>
  </data>
  <data name="Property.Velocity.Definition[2Fbkw0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流体の速度。</value>
  </data>
  <data name="Property.Pressure.Name[2MlVo0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>圧力</value>
  </data>
  <data name="Property.Pressure.Definition[2MlVo0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>流体の圧力。</value>
  </data>
  <data name="Property.IsDesignPoint.Name[2TJ7G0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>設計ポイントか</value>
  </data>
  <data name="Property.IsDesignPoint.Definition[2TJ7G0qTWHuO00025QrE$V]" xml:space="preserve">
    <value>IfcDistributionPort はスプリンクラー水力計算の設計ポイントとして利用されている（True）かどうか。設計ポイントはスプリンクラーシステム参照連結ポイントである。このポイントは当該地区の建築基準技術により定められる。例えば、スプリンクラー列下流側の最後のエルボー、T型継ぎ手或いは分岐にあり、またスプリンクラー列のバルブと一番近い立ち上がり管、立ち下がり管の連結にある。当該地区の基準などを参照して、設計ポイントはユーザー自身で決めることもある。</value>
  </data>
</root>