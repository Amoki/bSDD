<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[2658C0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_FireSuppressionTerminalTypeFireHydrant</value>
  </data>
  <data name="PSet.Definition[2658C0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Device, fitted to a pipe, through which a temporary supply of water may be provided (BS6100 330 6107)For further details on fire hydrants, see www.firehydrant.org</value>
  </data>
  <data name="Property.FireHydrantType.Name[2AGA20qUOHuO00025QrE$V]" xml:space="preserve">
    <value>FireHydrantType</value>
  </data>
  <data name="Property.FireHydrantType.Definition[2AGA20qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Defines the range of hydrant types from which the required type can be selected where.DryBarrel:	 A hydrant that has isolating valves fitted below ground and that may be used where the possibility of water freezing is a consideration.WetBarrel:	 A hydrant that has isolating valves fitted above ground and that may be used where there is no possibility of water freezing.</value>
  </data>
  <data name="Property.PumperConnectionSize.Name[2KOfy0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>PumperConnectionSize</value>
  </data>
  <data name="Property.PumperConnectionSize.Definition[2KOfy0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>The size of a connection to which a fire hose may be connected that is then linked to a pumping unit.</value>
  </data>
  <data name="Property.NumberOfHoseConnections.Name[2QyHQ0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>NumberOfHoseConnections</value>
  </data>
  <data name="Property.NumberOfHoseConnections.Definition[2QyHQ0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>The number of hose connections on the hydrant (excluding the pumper connection).</value>
  </data>
  <data name="Property.HoseConnectionSize.Name[2VjSg0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>HoseConnectionSize</value>
  </data>
  <data name="Property.HoseConnectionSize.Definition[2VjSg0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>The size of connections to which a hose may be connected (other than that to be linked to a pumping unit).</value>
  </data>
  <data name="Property.DischargeFlowRate.Name[2bgwk0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>DischargeFlowRate</value>
  </data>
  <data name="Property.DischargeFlowRate.Definition[2bgwk0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>The volumetric rate of fluid discharge.</value>
  </data>
  <data name="Property.FlowClass.Name[2gS5_0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>FlowClass</value>
  </data>
  <data name="Property.FlowClass.Definition[2gS5_0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Alphanumeric indication of the flow class of a hydrant (may be used in connection with or instead of the FlowRate property).</value>
  </data>
  <data name="Property.WaterIsPotable.Name[2m$jS0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>WaterIsPotable</value>
  </data>
  <data name="Property.WaterIsPotable.Definition[2m$jS0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Indication of whether the water flow from the hydrant is potable (set TRUE) or non potable (set FALSE).</value>
  </data>
  <data name="Property.PressureRating.Name[2sN260qUOHuO00025QrE$V]" xml:space="preserve">
    <value>PressureRating</value>
  </data>
  <data name="Property.PressureRating.Definition[2sN260qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Maximum pressure that the hydrant is manufactured to withstand.</value>
  </data>
  <data name="Property.BodyColor.Name[2xkMm0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>BodyColor</value>
  </data>
  <data name="Property.BodyColor.Definition[2xkMm0qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Color of the body of the hydrant.Note: Consult local fire regulations for statutory colors that may be required for hydrant bodies in particular circumstances.</value>
  </data>
  <data name="Property.CapColor.Name[30VY00qUOHuO00025QrE$V]" xml:space="preserve">
    <value>CapColor</value>
  </data>
  <data name="Property.CapColor.Definition[30VY00qUOHuO00025QrE$V]" xml:space="preserve">
    <value>Color of the caps of the hydrant.Note: Consult local fire regulations for statutory colors that may be required for hydrant caps in particular circumstances.</value>
  </data>
</root>