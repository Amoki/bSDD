<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[0g1Ii0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_PrecastSlab</value>
  </data>
  <data name="PSet.Definition[0g1Ii0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Layout and component information defining how prestressed slab components are laid out in a precast slab assembly. The values are global defaults for the slab as a whole, but can be overridden by local placements of the individual com</value>
  </data>
  <data name="Property.TypeDesignator.Name[0l_mm0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>TypeDesignator</value>
  </data>
  <data name="Property.TypeDesignator.Definition[0l_mm0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Type designator for the precast concrete slab, expressing mainly the component type. Possible values are “Hollow-core”, “Double-tee”, “Flat plank”, etc.</value>
  </data>
  <data name="Property.ToppingType.Name[0sYOE0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>ToppingType</value>
  </data>
  <data name="Property.ToppingType.Definition[0sYOE0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>Defines if a topping is applied and what kind. Values are “Full topping”, “Perimeter Wash”, “None”</value>
  </data>
  <data name="Property.EdgeDistanceToFirstAxis.Name[0yVsI0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>EdgeDistanceToFirstAxis</value>
  </data>
  <data name="Property.EdgeDistanceToFirstAxis.Definition[0yVsI0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The distance from the left (‘West’) edge of the slab (in the direction of span of the components) to the axis of the first component.</value>
  </data>
  <data name="Property.DistanceBetweenComponentAxes.Name[133Tm0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>DistanceBetweenComponentAxes</value>
  </data>
  <data name="Property.DistanceBetweenComponentAxes.Definition[133Tm0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The distance between the axes of the components, measured along the ‘South’ edge of the slab.</value>
  </data>
  <data name="Property.AngleToFirstAxis.Name[1ADEe0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>AngleToFirstAxis</value>
  </data>
  <data name="Property.AngleToFirstAxis.Definition[1ADEe0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The angle of rotation of the axis of the first component relative to the ‘West’ edge of the slab.</value>
  </data>
  <data name="Property.AngleBetweenComponentAxes.Name[1E_Pu0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>AngleBetweenComponentAxes</value>
  </data>
  <data name="Property.AngleBetweenComponentAxes.Definition[1E_Pu0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The angle between the axes of each pair of components.</value>
  </data>
  <data name="Property.NominalThickness.Name[1KLkY0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>NominalThickness</value>
  </data>
  <data name="Property.NominalThickness.Definition[1KLkY0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The nominal overall thickness of the slab.</value>
  </data>
  <data name="Property.NominalToppingThickness.Name[1RVVQ0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>NominalToppingThickness</value>
  </data>
  <data name="Property.NominalToppingThickness.Definition[1RVVQ0qVKHuO00025QrE$V]" xml:space="preserve">
    <value>The nominal thickness of the topping.</value>
  </data>
</root>