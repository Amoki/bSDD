<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[0$C8Y0qVeHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[0$C8Y0qVeHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.IsSelectable.Name[12n0_0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>切り替え</value>
  </data>
  <data name="Property.IsSelectable.Definition[12n0_0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>装置の “ON-OFF”状態を電気的表示が切り替え可能かどうか。</value>
  </data>
  <data name="Property.NominalCurrentAdjusted.Name[1AWxG0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>定格調整電流</value>
  </data>
  <data name="Property.NominalCurrentAdjusted.Definition[1AWxG0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>電流によって、動作時間が短かかったり長かったりするかどうか。</value>
  </data>
  <data name="Property.ExternalAdjusted.Name[1H4Yk0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>外部調整</value>
  </data>
  <data name="Property.ExternalAdjusted.Definition[1H4Yk0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>外部調整が可能かどうか。</value>
  </data>
  <data name="Property.ReleaseCurrent.Name[1N20o0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>放出電流</value>
  </data>
  <data name="Property.ReleaseCurrent.Definition[1N20o0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>放出する電流は、S-functionの初期特性。</value>
  </data>
  <data name="Property.ReleaseTime.Name[1RpC20qVeHuO00025QrE$V]" xml:space="preserve">
    <value>放出時間</value>
  </data>
  <data name="Property.ReleaseTime.Definition[1RpC20qVeHuO00025QrE$V]" xml:space="preserve">
    <value>関連する部分の初期トリップのための[s]が放出時間。 このトリップ時間は、リリースの電流よりも低い電流の場合、指定された動作時間よりも長くなります。 値が平均値として与えられる。</value>
  </data>
  <data name="Property.CurrentTolerance1.Name[1Xmg60qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容電流1</value>
  </data>
  <data name="Property.CurrentTolerance1.Definition[1Xmg60qVeHuO00025QrE$V]" xml:space="preserve">
    <value>時間/特性曲線の許容範囲を[％]で指定。</value>
  </data>
  <data name="Property.CurrentToleranceLimit1.Name[1d7_m0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容電流限界1</value>
  </data>
  <data name="Property.CurrentToleranceLimit1.Definition[1d7_m0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容電流1を制限する時間制限。値が0の場合は、制限はない。</value>
  </data>
  <data name="Property.CurrentTolerance2.Name[1j5Sq0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容電流2</value>
  </data>
  <data name="Property.CurrentTolerance2.Definition[1j5Sq0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>[％]で指定された時間/特性曲線の許容範囲は、上記の許容電流限界1の時間で有効です。</value>
  </data>
  <data name="Property.IsCurrentTolerancePositiveOnly.Name[1pf4I0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>電流許容値</value>
  </data>
  <data name="Property.IsCurrentTolerancePositiveOnly.Definition[1pf4I0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容電流限界1の値のみかどうか 上記でない場合、電流許容値はプラス/マイナスした値。</value>
  </data>
  <data name="Property.TimeTolerance1.Name[1wChm0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容時間1</value>
  </data>
  <data name="Property.TimeTolerance1.Definition[1wChm0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>[％]で時間/特性曲線の許容時間を設定</value>
  </data>
  <data name="Property.TimeToleranceLimit1.Name[20A9q0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容限界時間1</value>
  </data>
  <data name="Property.TimeToleranceLimit1.Definition[20A9q0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容時間1を制限する電流制限値。値が0の場合は、制限はない。</value>
  </data>
  <data name="Property.TimeTolerance2.Name[24xL40qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容時間2</value>
  </data>
  <data name="Property.TimeTolerance2.Definition[24xL40qVeHuO00025QrE$V]" xml:space="preserve">
    <value>[％]で指定された時間/特性曲線の許容範囲は、上記の許容電流限界1の電流で有効です。</value>
  </data>
  <data name="Property.IsTimeTolerancePositiveOnly.Name[2Aup80qVeHuO00025QrE$V]" xml:space="preserve">
    <value>時間許容値</value>
  </data>
  <data name="Property.IsTimeTolerancePositiveOnly.Definition[2Aup80qVeHuO00025QrE$V]" xml:space="preserve">
    <value>許容時間1の値のみかどうか 上記でない場合、時間許容値は、プラス/マイナスした値。</value>
  </data>
  <data name="Property.ReleaseCurrentI2tStart.Name[2HSQc0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>I2tの開始放流電流</value>
  </data>
  <data name="Property.ReleaseCurrentI2tStart.Definition[2HSQc0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>G関数の特性曲線I2tの始点[x In]が開始放流電流。</value>
  </data>
  <data name="Property.ReleaseTimeI2tStart.Name[2MplG0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>I2tの開始放流時間</value>
  </data>
  <data name="Property.ReleaseTimeI2tStart.Definition[2MplG0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>G関数の特性曲線I2tの始点[s]が開始放流時間。</value>
  </data>
  <data name="Property.ReleaseCurrentI2tEnd.Name[2SB3w0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>I2tの終了放流電流</value>
  </data>
  <data name="Property.ReleaseCurrentI2tEnd.Definition[2SB3w0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>G関数のI2の特性曲線のエンドポイントの[s]を放流電流。   I2tの終了放流電流がI2tの開始放流電流よりも低くしなければならない。</value>
  </data>
  <data name="Property.ReleaseTimeI2tEnd.Name[2Y8X_0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>I2tの終了放流時間</value>
  </data>
  <data name="Property.ReleaseTimeI2tEnd.Definition[2Y8X_0qVeHuO00025QrE$V]" xml:space="preserve">
    <value>G関数のI2の特性曲線のエンドポイントの[s]を放流時間。  I2tの終了放流電流時間がI2tの開始放流時間よりも低くしなければならない。</value>
  </data>
</root>