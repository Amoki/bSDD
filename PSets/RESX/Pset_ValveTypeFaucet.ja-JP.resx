<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[2Ucv80qXGHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[2Ucv80qXGHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.FaucetType.Name[2Z_Do0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓タイプ</value>
  </data>
  <data name="Property.FaucetType.Definition[2Z_Do0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓タイプの範囲をここに明確に定義するBib = 入口が水平で、下に吐出するノズルの水栓　Globe =浴槽の端に付けられ、入口が水平で、本体が部分的に球形で、ノズルが垂直な水栓　Diverter =シャワーヘッドへの混合水の流れを変えられる弁を持った組合せ水栓　DividedFlowCombination = 共通のノズルから出るまで水と湯が分かれたままになっている組合せ水栓　Pillar =垂直な入口と下へ吐出するノズルを持った水栓　SingleOutletCombination =共通のノズルから出る前に水と湯が混合する組合せ水栓　Spray =スプレー状の吐出口を持った水栓　SprayMixing =使用中決められた温度で供給する給水と給湯に接続されたスプレー水栓</value>
  </data>
  <data name="Property.FaucetOperation.Name[2t2wo0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓操作</value>
  </data>
  <data name="Property.FaucetOperation.Definition[2t2wo0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓の操作方法の範囲をここで明確に定義する：CeramicDisc = 口を開閉するセラミックシールを持った急操作水栓　LeverHandle = レバーハンドルで操作される急操作水栓　SelfClosing =サージ圧をもたらさない自閉水栓　QuarterTurn =90度、操作機構を回すことで全開又は全閉できる急操作水栓　QuickAction =操作機構の一つの小さな動きで全開又は全閉できる水栓　ScrewDown =口を開閉するためにねじの主軸を回して中の板又は円板を動かす水栓　SelfClosing = 操作主軸の頂部の圧力で開けられ、圧力が開放された時は、ばね又は錘の動作で閉められる水栓　TimedSelfClosing =前もって決められた時間、吐出する自閉水栓</value>
  </data>
  <data name="Property.FaucetFunction.Name[3Bw400qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓機能</value>
  </data>
  <data name="Property.FaucetFunction.Definition[3Bw400qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓の作動温度を明確に定義する。</value>
  </data>
  <data name="Property.Finish.Name[3QDbm0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>仕上げ</value>
  </data>
  <data name="Property.Finish.Definition[3QDbm0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓に適用される仕上げの説明</value>
  </data>
  <data name="Property.FaucetTopDescription.Name[3WB3q0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>水栓の頂部</value>
  </data>
  <data name="Property.FaucetTopDescription.Definition[3WB3q0qXGHuO00025QrE$V]" xml:space="preserve">
    <value>操作機構/水栓の頂部の説明</value>
  </data>
</root>