<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[1VtUk0qSGHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[1VtUk0qSGHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.Reference.Name[1aef_0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>参照記号</value>
  </data>
  <data name="Property.Reference.Definition[1aef_0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>このプロジェクトにおける参照記号(例：A-1)。分類コードではなく内部で使用されるプロジェクトタイプとして使用されるもの。</value>
  </data>
  <data name="Property.Status.Name[1ephq0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="Property.Status.Definition[1ephq0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>要素（主にリノベーションまたは改修プロジェクトにおいて）の状態。 状態は、「新規(New)」－新しく追加される要素。「既存」－要素は存在し、かつ残りもの。「破壊」－要素は存在したが、廃棄されるもの。「一時的」－一時的に存在する要素（一時的にサポートしている構造のようなもの）。</value>
  </data>
  <data name="Property.PressureRating.Name[1rwwm0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>常用圧力</value>
  </data>
  <data name="Property.PressureRating.Definition[1rwwm0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>管轄組織により設定されたボイラの常用圧力</value>
  </data>
  <data name="Property.OperatingMode.Name[1w5yc0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>動作モード</value>
  </data>
  <data name="Property.OperatingMode.Definition[1w5yc0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>ボイラの動作モードのID　（固定、２段階、比例．．．）</value>
  </data>
  <data name="Property.HeatTransferSurfaceArea.Name[24qbw0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>伝熱面積</value>
  </data>
  <data name="Property.HeatTransferSurfaceArea.Definition[24qbw0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>容器の伝熱部面積の合計</value>
  </data>
  <data name="Property.NominalPartLoadRatio.Name[29bnA0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>設計部分負荷比率</value>
  </data>
  <data name="Property.NominalPartLoadRatio.Definition[29bnA0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>許容部分負荷比範囲</value>
  </data>
  <data name="Property.WaterInletTemperatureRange.Name[2Ez5q0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>入口水温範囲</value>
  </data>
  <data name="Property.WaterInletTemperatureRange.Definition[2Ez5q0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>入口水温範囲</value>
  </data>
  <data name="Property.WaterStorageCapacity.Name[2KKQU0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>缶内水量</value>
  </data>
  <data name="Property.WaterStorageCapacity.Definition[2KKQU0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>缶内水量</value>
  </data>
  <data name="Property.IsWaterStorageHeater.Name[2OVSK0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>給湯タンク有無</value>
  </data>
  <data name="Property.IsWaterStorageHeater.Definition[2OVSK0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>給湯用の缶体があればTRUE、（瞬間湯沸かし器のように）ボイラにタンクがなければFALSE</value>
  </data>
  <data name="Property.PartialLoadEfficiencyCurves.Name[2SgUA0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>部分負荷効率曲線</value>
  </data>
  <data name="Property.PartialLoadEfficiencyCurves.Definition[2SgUA0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>部分負荷係数の関数としてのボイラ効率　　E=f(部分負荷率）</value>
  </data>
  <data name="Property.OutletTemperatureRange.Name[2ZqF20qSGHuO00025QrE$V]" xml:space="preserve">
    <value>出口温度範囲</value>
  </data>
  <data name="Property.OutletTemperatureRange.Definition[2ZqF20qSGHuO00025QrE$V]" xml:space="preserve">
    <value>水または蒸気のどちらかの許容出口温度</value>
  </data>
  <data name="Property.NominalEnergyConsumption.Name[2fnj60qSGHuO00025QrE$V]" xml:space="preserve">
    <value>設計エネルギー消費量</value>
  </data>
  <data name="Property.NominalEnergyConsumption.Definition[2fnj60qSGHuO00025QrE$V]" xml:space="preserve">
    <value>ボイラ最大能力時の設計燃料消費量</value>
  </data>
  <data name="Property.EnergySource.Name[2jyky0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>エネルギ種別</value>
  </data>
  <data name="Property.EnergySource.Definition[2jyky0qSGHuO00025QrE$V]" xml:space="preserve">
    <value>加熱に使用する燃料のエネルギ種類　（石炭、石炭粉末、電気、ガス、油、プロパン、木材、木材チップ、木材ペレット、木粉、他）</value>
  </data>
</root>