<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[1FTq80qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_AirTerminalTypeCommon</value>
  </data>
  <data name="PSet.Definition[1FTq80qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Air terminal type common attributes.SoundLevel attribute deleted in IFC2x2 Pset Addendum: Use IfcSoundProperties instead.</value>
  </data>
  <data name="Property.Reference.Name[1M1Rc0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="Property.Reference.Definition[1M1Rc0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Reference ID for this specified type in this project (e.g. type 'A-1'), provided, if there is no classification reference to a recognized classification system used.</value>
  </data>
  <data name="Property.Status.Name[1Sb340qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Property.Status.Definition[1Sb340qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as "New" - element designed as new addition, "Existing" - element exists and remains, "Demolish" - element existed but is to be demolished,  "Temporary" - element will exists only temporary (like a temporary support structure).</value>
  </data>
  <data name="Property.Shape.Name[1hUkE0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Shape</value>
  </data>
  <data name="Property.Shape.Definition[1hUkE0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Shape of the air terminal. Slot is typically a long narrow supply device with an aspect ratio generally greater than 10 to 1.</value>
  </data>
  <data name="Property.FaceType.Name[1xaiC0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>FaceType</value>
  </data>
  <data name="Property.FaceType.Definition[1xaiC0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Identifies how the terminal face of an AirTerminal is constructed.</value>
  </data>
  <data name="Property.SlotWidth.Name[2H1_q0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>SlotWidth</value>
  </data>
  <data name="Property.SlotWidth.Definition[2H1_q0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Slot width.</value>
  </data>
  <data name="Property.SlotLength.Name[2MPJU0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>SlotLength</value>
  </data>
  <data name="Property.SlotLength.Definition[2MPJU0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Slot length.</value>
  </data>
  <data name="Property.NumberOfSlots.Name[2SMnY0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>NumberOfSlots</value>
  </data>
  <data name="Property.NumberOfSlots.Definition[2SMnY0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Number of slots.</value>
  </data>
  <data name="Property.FlowPattern.Name[2YKFc0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>FlowPattern</value>
  </data>
  <data name="Property.FlowPattern.Definition[2YKFc0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Flow pattern.</value>
  </data>
  <data name="Property.AirFlowrateRange.Name[2tBOq0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>AirFlowrateRange</value>
  </data>
  <data name="Property.AirFlowrateRange.Definition[2tBOq0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Air flowrate range within which the air terminal is designed to operate.</value>
  </data>
  <data name="Property.TemperatureRange.Name[2_L9i0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>TemperatureRange</value>
  </data>
  <data name="Property.TemperatureRange.Definition[2_L9i0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Temperature range within which the air terminal is designed to operate.</value>
  </data>
  <data name="Property.DischargeDirection.Name[36hDO0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>DischargeDirection</value>
  </data>
  <data name="Property.DischargeDirection.Definition[36hDO0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>Discharge direction of the air terminal.Parallel: discharges parallel to mounting surface designed so that flow attaches to the surface.Perpendicular:  discharges away from mounting surface.Adjustable: both parallel and perpendicular discharge.</value>
  </data>
  <data name="Property.ThrowLength.Name[3K_l80qRyHuO00025QrE$V]" xml:space="preserve">
    <value>ThrowLength</value>
  </data>
  <data name="Property.ThrowLength.Definition[3K_l80qRyHuO00025QrE$V]" xml:space="preserve">
    <value>The horizontal or vertical axial distance an airstream travels after leaving an AirTerminal before the maximum stream velocity is reduced to a specified terminal velocity under isothermal conditions at the upper value of the AirFlowrateRange.</value>
  </data>
  <data name="Property.AirDiffusionPerformanceIndex.Name[3TwyE0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>AirDiffusionPerformanceIndex</value>
  </data>
  <data name="Property.AirDiffusionPerformanceIndex.Definition[3TwyE0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>The Air Diffusion Performance Index (ADPI) is used for cooling mode conditions. If several measurements of air velocity and air temperature are made throughout the occupied zone of a space, the ADPI is the percentage of locations where measurements were taken that meet the specifications for effective draft temperature and air velocity.</value>
  </data>
  <data name="Property.FinishType.Name[3ZIGu0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>FinishType</value>
  </data>
  <data name="Property.FinishType.Definition[3ZIGu0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>The type of finish for the air terminal.</value>
  </data>
  <data name="Property.FinishColor.Name[3mPVq0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>FinishColor</value>
  </data>
  <data name="Property.FinishColor.Definition[3mPVq0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>The finish color for the air terminal.</value>
  </data>
  <data name="Property.MountingType.Name[3sz7I0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>MountingType</value>
  </data>
  <data name="Property.MountingType.Definition[3sz7I0qRyHuO00025QrE$V]" xml:space="preserve">
    <value>The way the air terminal is mounted to the ceiling, wall, etc.Surface: mounted to the surface of something (e.g., wall, duct, etc.).Flat flush: mounted flat and flush with a surface.Lay-in: mounted in a lay-in type ceiling (e.g., a dropped ceiling grid).</value>
  </data>
  <data name="Property.CoreType.Name[0735G0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>CoreType</value>
  </data>
  <data name="Property.CoreType.Definition[0735G0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Identifies the way the core of the AirTerminal is constructed.</value>
  </data>
  <data name="Property.CoreSetHorizontal.Name[0Qjxg0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>CoreSetHorizontal</value>
  </data>
  <data name="Property.CoreSetHorizontal.Definition[0Qjxg0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Degree of horizontal (in the X-axis of the LocalPlacement) blade set from the centerline.</value>
  </data>
  <data name="Property.CoreSetVertical.Name[0VV6w0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>CoreSetVertical</value>
  </data>
  <data name="Property.CoreSetVertical.Definition[0VV6w0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Degree of vertical (in the Y-axis of the LocalPlacement) blade set from the centerline.</value>
  </data>
  <data name="Property.HasIntegralControl.Name[0bSa_0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>HasIntegralControl</value>
  </data>
  <data name="Property.HasIntegralControl.Definition[0bSa_0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>If TRUE, a self powered temperature control is included in the AirTerminal.</value>
  </data>
  <data name="Property.FlowControlType.Name[0gDmE0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>FlowControlType</value>
  </data>
  <data name="Property.FlowControlType.Definition[0gDmE0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Type of flow control element that may be included as a part of the construction of the air terminal.</value>
  </data>
  <data name="Property.HasSoundAttenuator.Name[0vjao0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>HasSoundAttenuator</value>
  </data>
  <data name="Property.HasSoundAttenuator.Definition[0vjao0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>If TRUE, the air terminal has sound attenuation.</value>
  </data>
  <data name="Property.HasThermalInsulation.Name[0$4vS0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>HasThermalInsulation</value>
  </data>
  <data name="Property.HasThermalInsulation.Definition[0$4vS0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>If TRUE, the air terminal has thermal insulation.</value>
  </data>
  <data name="Property.NeckArea.Name[14SE60qS0HuO00025QrE$V]" xml:space="preserve">
    <value>NeckArea</value>
  </data>
  <data name="Property.NeckArea.Definition[14SE60qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Neck area of the air terminal.</value>
  </data>
  <data name="Property.EffectiveArea.Name[19pYm0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>EffectiveArea</value>
  </data>
  <data name="Property.EffectiveArea.Definition[19pYm0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Effective discharge area of the air terminal.</value>
  </data>
  <data name="Property.AirFlowrateVersusFlowControlElement.Name[1GNAE0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>AirFlowrateVersusFlowControlElement</value>
  </data>
  <data name="Property.AirFlowrateVersusFlowControlElement.Definition[1GNAE0qS0HuO00025QrE$V]" xml:space="preserve">
    <value>Air flowrate versus flow control element position at nominal pressure drop.</value>
  </data>
</root>