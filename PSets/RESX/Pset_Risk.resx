<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[3$8DG0qW0HuO00025QrE$V]" xml:space="preserve">
    <value>Pset_Risk</value>
  </data>
  <data name="PSet.Definition[3$8DG0qW0HuO00025QrE$V]" xml:space="preserve">
    <value>An indication of exposure to mischance, peril, menace, hazard or loss. HISTORY: Extended in IFC2x3There are various types of risk that may be encountered and there may be several instances of Pset_Risk associated in an instance of an IfcProcess.Specification of this property set incorporates the values of the Incom risk analysis matrix (satisfying AS/NZS 4360) together with additional identified requirements.</value>
  </data>
  <data name="Property.RiskType.Name[055hK0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>RiskType</value>
  </data>
  <data name="Property.RiskType.Definition[055hK0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>Identifies the predefined types of risk from which the type required may be set.</value>
  </data>
  <data name="Property.NatureOfRisk.Name[0KbVu0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>NatureOfRisk</value>
  </data>
  <data name="Property.NatureOfRisk.Definition[0KbVu0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>An indication of the generic nature of the risk that might be encountered. NOTE: It is anticipated that there will be a local agreement that constrains the values that might be assigned to this property. An example might be 'Fall'  or 'Fall of grille unit' causing injury and damage to person and property.</value>
  </data>
  <data name="Property.SubNatureOfRisk1.Name[0RlGm0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>SubNatureOfRisk1</value>
  </data>
  <data name="Property.SubNatureOfRisk1.Definition[0RlGm0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>A first subsidiary value that might be assigned to designate a more specific type of risk.NOTE: Nature of risk may be identified in various ways depending upon the place where risk assessment takes place and according to local agreement. This property set allows for a generic nature of risk and up to two subsidiary natures. An example might be 'causing injury and damage'.</value>
  </data>
  <data name="Property.SubNatureOfRisk2.Name[0YIuE0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>SubNatureOfRisk2</value>
  </data>
  <data name="Property.SubNatureOfRisk2.Definition[0YIuE0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>A second subsidiary value that might be assigned to designate a more specific type of risk. An example might be 'o person and property'.</value>
  </data>
  <data name="Property.RiskCause.Name[0fSf60qW4HuO00025QrE$V]" xml:space="preserve">
    <value>RiskCause</value>
  </data>
  <data name="Property.RiskCause.Definition[0fSf60qW4HuO00025QrE$V]" xml:space="preserve">
    <value>A value that may be assigned to capture the cause or trigger for the risk. An example might be 'poor fixing'.</value>
  </data>
  <data name="Property.AssessmentOfRisk.Name[0m0Ga0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>AssessmentOfRisk</value>
  </data>
  <data name="Property.AssessmentOfRisk.Definition[0m0Ga0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>Likelihood of risk event occurring.Note  that assessment of risk may frequently be associated with the physical location of the object for which the risk is assessed.</value>
  </data>
  <data name="Property.RiskConsequence.Name[14tPo0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>RiskConsequence</value>
  </data>
  <data name="Property.RiskConsequence.Definition[14tPo0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>Indicates the level of severity of the consequences that the risk would have in case it happens.</value>
  </data>
  <data name="Property.RiskRating.Name[1Qwrq0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>RiskRating</value>
  </data>
  <data name="Property.RiskRating.Definition[1Qwrq0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>A general rating of the risk that may be determined from a combination of the risk assessment and risk consequence.</value>
  </data>
  <data name="Property.RiskOwner.Name[1naRG0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>RiskOwner</value>
  </data>
  <data name="Property.RiskOwner.Definition[1naRG0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>A determination of who is the owner of the risk by reference to principal roles of organizations within a project. Determination of the specific organization should be by reference to instances of IfcActorRole assigned to instances of IfcOrganization (if assigned).</value>
  </data>
  <data name="Property.AffectsSurroundings.Name[21gPE0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>AffectsSurroundings</value>
  </data>
  <data name="Property.AffectsSurroundings.Definition[21gPE0qW4HuO00025QrE$V]" xml:space="preserve">
    <value>Indicates wether the risk affects only to the person assigned to that task (FALSE) or if it can also affect to the people in the surroundings (TRUE).For example, the process of painting would affect all the people in the vicinity of the process.</value>
  </data>
  <data name="Property.PreventiveMeassures.Name[28qA60qW4HuO00025QrE$V]" xml:space="preserve">
    <value>PreventiveMeassures</value>
  </data>
  <data name="Property.PreventiveMeassures.Definition[28qA60qW4HuO00025QrE$V]" xml:space="preserve">
    <value>Identifies preventive measures to be taken to mitigate risk.</value>
  </data>
</root>