<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[1LJ480qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_WasteTerminalTypeFloorTrap</value>
  </data>
  <data name="PSet.Definition[1LJ480qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Pipe fitting, set into the floor, that retains liquid to prevent the passage of foul air.</value>
  </data>
  <data name="Property.NominalBodyLength.Name[1QgOo0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>NominalBodyLength</value>
  </data>
  <data name="Property.NominalBodyLength.Definition[1QgOo0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the trap.</value>
  </data>
  <data name="Property.NominalBodyWidth.Name[1Zcbu0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>NominalBodyWidth</value>
  </data>
  <data name="Property.NominalBodyWidth.Definition[1Zcbu0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Nominal or quoted length measured along the y-axis in the local coordinate system of the chamber of the trap.</value>
  </data>
  <data name="Property.NominalBodyDepth.Name[1hyfa0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>NominalBodyDepth</value>
  </data>
  <data name="Property.NominalBodyDepth.Definition[1hyfa0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Nominal or quoted length measured along the z-axis in the local coordinate system of the chamber of the  trap.</value>
  </data>
  <data name="Property.IsForSullageWater.Name[1rV040qXOHuO00025QrE$V]" xml:space="preserve">
    <value>IsForSullageWater</value>
  </data>
  <data name="Property.IsForSullageWater.Definition[1rV040qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Indicates if the purpose of the floor trap is to receive sullage water, or if that is amongst its purposes (= TRUE), or not (= FALSE). Note that if TRUE, it is expected that an upstand or kerb will be placed around the floor trap to prevent the ingress of surface water runoff; the provision of the upstand or kerb is not dealt with in this property set.</value>
  </data>
  <data name="Property.SpilloverLevel.Name[1yemy0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>SpilloverLevel</value>
  </data>
  <data name="Property.SpilloverLevel.Definition[1yemy0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>The level at which water spills out of the terminal.</value>
  </data>
  <data name="Property.TrapType.Name[25a_20qXOHuO00025QrE$V]" xml:space="preserve">
    <value>TrapType</value>
  </data>
  <data name="Property.TrapType.Definition[25a_20qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Identifies the predefined types of waste trap used in combination with the floor trap from which the type required may be set.</value>
  </data>
  <data name="Property.HasStrainer.Name[2L4oc0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>HasStrainer</value>
  </data>
  <data name="Property.HasStrainer.Definition[2L4oc0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Indicates whether the gully trap has a strainer (= TRUE) or not (= FALSE).</value>
  </data>
  <data name="Property.OutletConnectionSize.Name[2SEZU0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>OutletConnectionSize</value>
  </data>
  <data name="Property.OutletConnectionSize.Definition[2SEZU0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Size of the outlet connection from the object.</value>
  </data>
  <data name="Property.InletPatternType.Name[2cN3O0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>InletPatternType</value>
  </data>
  <data name="Property.InletPatternType.Definition[2cN3O0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Identifies the pattern of inlet connections to a trap.A trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).</value>
  </data>
  <data name="Property.InletConnectionSize.Name[34APi0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>InletConnectionSize</value>
  </data>
  <data name="Property.InletConnectionSize.Definition[34APi0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Size of the inlet connection(s), where used, of the inlet connections.Note that all inlet connections are assumed to be the same size.</value>
  </data>
  <data name="Property.CoverLength.Name[3DimC0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>CoverLength</value>
  </data>
  <data name="Property.CoverLength.Definition[3DimC0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the trap.</value>
  </data>
  <data name="Property.CoverWidth.Name[3MezI0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>CoverWidth</value>
  </data>
  <data name="Property.CoverWidth.Definition[3MezI0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>The length measured along the y-axis in the local coordinate system of the cover of the  trap.</value>
  </data>
  <data name="Property.CoverMaterial.Name[3VbAO0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>CoverMaterial</value>
  </data>
  <data name="Property.CoverMaterial.Definition[3VbAO0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>Material from which the cover or grating is constructed.</value>
  </data>
</root>