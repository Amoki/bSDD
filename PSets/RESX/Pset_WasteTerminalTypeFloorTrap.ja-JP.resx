<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[1LJ480qXOHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[1LJ480qXOHuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.NominalBodyLength.Name[1QgOo0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>呼称躯体長</value>
  </data>
  <data name="Property.NominalBodyLength.Definition[1QgOo0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>防臭弁の区画の半径か局所座標系のＸ軸に沿って測定された呼称もしくは積算された長さ。</value>
  </data>
  <data name="Property.NominalBodyWidth.Name[1Zcbu0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>呼称躯体幅</value>
  </data>
  <data name="Property.NominalBodyWidth.Definition[1Zcbu0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>防臭弁の区画の半径か局所座標系のＹ軸に沿って測定された呼称もしくは積算された長さ。</value>
  </data>
  <data name="Property.NominalBodyDepth.Name[1hyfa0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>呼称躯体深さ</value>
  </data>
  <data name="Property.NominalBodyDepth.Definition[1hyfa0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>防臭弁の区画の半径か局所座標系のZ軸に沿って測定された呼称もしくは積算された長さ。</value>
  </data>
  <data name="Property.IsForSullageWater.Name[1rV040qXOHuO00025QrE$V]" xml:space="preserve">
    <value>汚水用</value>
  </data>
  <data name="Property.IsForSullageWater.Definition[1rV040qXOHuO00025QrE$V]" xml:space="preserve">
    <value>床排水防臭弁の目的が、汚水を受けることの可（=true)否(=false)を示す。注意：TRUEの場合、水の流入を防ぐための床防臭弁の周りに直立壁か縁石が配置され、このプロパティセットにおいては直立壁や縁石の提供は処理されない。</value>
  </data>
  <data name="Property.SpilloverLevel.Name[1yemy0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>水位</value>
  </data>
  <data name="Property.SpilloverLevel.Definition[1yemy0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>継手からの水位。</value>
  </data>
  <data name="Property.TrapType.Name[25a_20qXOHuO00025QrE$V]" xml:space="preserve">
    <value>防臭弁の種類</value>
  </data>
  <data name="Property.TrapType.Definition[25a_20qXOHuO00025QrE$V]" xml:space="preserve">
    <value>セットされる予定の床の防臭弁と組み合わせて使われる廃棄物の防臭弁のあらかじめ定義されたタイプの識別情報。</value>
  </data>
  <data name="Property.HasStrainer.Name[2L4oc0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>ろ過装置</value>
  </data>
  <data name="Property.HasStrainer.Definition[2L4oc0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>溝の防臭弁がろ過装置を備えているかどうか指示する。</value>
  </data>
  <data name="Property.OutletConnectionSize.Name[2SEZU0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>接続口口径</value>
  </data>
  <data name="Property.OutletConnectionSize.Definition[2SEZU0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>要素からの接続口口径。</value>
  </data>
  <data name="Property.InletPatternType.Name[2cN3O0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>吸気口種類</value>
  </data>
  <data name="Property.InletPatternType.Definition[2cN3O0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>防臭弁の吸気口接続口の識別情報。一つの防臭弁に0.1.2.3.4.の吸気口接続口とパターンがあるときは変化する可能性があります。羅列されるとき、接続口が垂直である様子か、防臭弁の底（南）におかれます。位置1は左(西)に、位置2は上方(北)に、位置3は右(東)に、位置4は下方(南）になる。</value>
  </data>
  <data name="Property.InletConnectionSize.Name[34APi0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>吸気口サイズ</value>
  </data>
  <data name="Property.InletConnectionSize.Definition[34APi0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>吸気口接続口のサイズ注意：同サイズの吸気口接続口がないものとする。</value>
  </data>
  <data name="Property.CoverLength.Name[3DimC0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>カバー長さ</value>
  </data>
  <data name="Property.CoverLength.Definition[3DimC0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>局所座標系のX軸に沿うか、半径（円状の形の場合）で測定された防臭弁カバーの長さ。</value>
  </data>
  <data name="Property.CoverWidth.Name[3MezI0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>カバー幅</value>
  </data>
  <data name="Property.CoverWidth.Definition[3MezI0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>局所座標系のY軸で測定された防臭弁カバーの長さ。</value>
  </data>
  <data name="Property.CoverMaterial.Name[3VbAO0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>カバー材質</value>
  </data>
  <data name="Property.CoverMaterial.Definition[3VbAO0qXOHuO00025QrE$V]" xml:space="preserve">
    <value>カバーか格子の材質。</value>
  </data>
</root>