<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[2zaoU0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_ServiceLife</value>
  </data>
  <data name="PSet.Definition[2zaoU0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>Captures the period of time that an artifact will last along with various factors that impact the expected service life.  HISTORY: Introduced in IFC4 as replacement for IfcServiceLife and IfcServiceLifeFactor.</value>
  </data>
  <data name="Property.ServiceLifeType.Name[3Pbia0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>ServiceLifeType</value>
  </data>
  <data name="Property.ServiceLifeType.Definition[3Pbia0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>ACTUALSERVICELIFE: The service life that an asset has given. EXPECTEDSERVICELIFE: The service life that an artefact is expected to have under current operating conditions. OPTIMISTICREFERENCESERVICELIFE: The best or most optimistic estimate of service life that is quoted for an artefact under reference operating conditions. PESSIMISTICREFERENCESERVICELIFE: The least or most pessimistic estimate of service life that is quoted for an artefact under reference operating conditions. REFERENCESERVICELIFE: The typical service life that is quoted for an artefact under reference operating conditions.</value>
  </data>
  <data name="Property.ServiceLifeDuration.Name[3gtzM0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>ServiceLifeDuration</value>
  </data>
  <data name="Property.ServiceLifeDuration.Definition[3gtzM0qWOHuO00025QrE$V]" xml:space="preserve">
    <value>The length or duration of a service life.</value>
  </data>
  <data name="Property.QualityOfComponents.Name[3mFI00qWOHuO00025QrE$V]" xml:space="preserve">
    <value>QualityOfComponents</value>
  </data>
  <data name="Property.QualityOfComponents.Definition[3mFI00qWOHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the quality of components used.</value>
  </data>
  <data name="Property.DesignLevel.Name[05iae0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>DesignLevel</value>
  </data>
  <data name="Property.DesignLevel.Definition[05iae0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of design level employed.</value>
  </data>
  <data name="Property.WorkExecutionLevel.Name[0Eenk0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>WorkExecutionLevel</value>
  </data>
  <data name="Property.WorkExecutionLevel.Definition[0Eenk0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the quality of work executed.</value>
  </data>
  <data name="Property.IndoorEnvironment.Name[0Na_q0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>IndoorEnvironment</value>
  </data>
  <data name="Property.IndoorEnvironment.Definition[0Na_q0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the indoor environment (where appropriate).</value>
  </data>
  <data name="Property.OutdoorEnvironment.Name[0Vx2W0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>OutdoorEnvironment</value>
  </data>
  <data name="Property.OutdoorEnvironment.Definition[0Vx2W0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the outdoor environment (where appropriate)</value>
  </data>
  <data name="Property.InUseConditions.Name[0etFc0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>InUseConditions</value>
  </data>
  <data name="Property.InUseConditions.Definition[0etFc0qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the conditions in which components are operating.</value>
  </data>
  <data name="Property.MaintenanceLevel.Name[0oPc60qWSHuO00025QrE$V]" xml:space="preserve">
    <value>MaintenanceLevel</value>
  </data>
  <data name="Property.MaintenanceLevel.Definition[0oPc60qWSHuO00025QrE$V]" xml:space="preserve">
    <value>Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.</value>
  </data>
  <data name="Property.MeanTimeBetweenFailure.Name[3RsnW5KCT7x9MBeLGYPGUU]" xml:space="preserve">
    <value>MeanTimeBetweenFailure</value>
  </data>
  <data name="Property.MeanTimeBetweenFailure.Definition[3RsnW5KCT7x9MBeLGYPGUU]" xml:space="preserve">
    <value>The average time duration between instances of failure of a product.</value>
  </data>
</root>