<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[0_xxU0qX4HuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="PSet.Definition[0_xxU0qX4HuO00025QrE$V]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.Reference.Name[14JG80qX4HuO00025QrE$V]" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="Property.Reference.Definition[14JG80qX4HuO00025QrE$V]" xml:space="preserve">
    <value>このプロジェクト (例． 'A-1'　タイプなど)で指定された参照ID。認められた分類体系の分類参照が存在しない場合に適用される。</value>
  </data>
  <data name="Property.Status.Name[1BT100qX4HuO00025QrE$V]" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="Property.Status.Definition[1BT100qX4HuO00025QrE$V]" xml:space="preserve">
    <value>要素（主にリノベーションまたは改修プロジェクトにおいて）の状態。 状態は、「新規(New)」－新しく追加される要素。「既存」－要素は存在し、かつ残りもの。「破壊」－要素は存在したが、廃棄されるもの。「一時的」－一時的に存在する要素（一時的にサポートしている構造のようなもの）。</value>
  </data>
  <data name="Property.PrimaryVoltage.Name[1Txac0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第1電圧</value>
  </data>
  <data name="Property.PrimaryVoltage.Definition[1Txac0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の1次側に伝送される電圧。</value>
  </data>
  <data name="Property.SecondaryVoltage.Name[1ZIvG0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第2電圧</value>
  </data>
  <data name="Property.SecondaryVoltage.Definition[1ZIvG0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の2次側へ出力される電圧。</value>
  </data>
  <data name="Property.PrimaryCurrent.Name[1gSg80qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第1電流</value>
  </data>
  <data name="Property.PrimaryCurrent.Definition[1gSg80qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の1次側に伝送される電流。</value>
  </data>
  <data name="Property.SecondaryCurrent.Name[1n0Hc0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第2電流</value>
  </data>
  <data name="Property.SecondaryCurrent.Definition[1n0Hc0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の2次側へ出力される電流。</value>
  </data>
  <data name="Property.PrimaryFrequency.Name[1tZv40qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第１周波数</value>
  </data>
  <data name="Property.PrimaryFrequency.Definition[1tZv40qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の1次側に伝送される周波数。</value>
  </data>
  <data name="Property.SecondaryFrequency.Name[1_7WY0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第2周波数</value>
  </data>
  <data name="Property.SecondaryFrequency.Definition[1_7WY0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の2次側に出力される周波数。</value>
  </data>
  <data name="Property.PrimaryApparentPower.Name[23UrC0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第1電力</value>
  </data>
  <data name="Property.PrimaryApparentPower.Definition[23UrC0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の1次側に伝送される電力（VA: アンペア）。</value>
  </data>
  <data name="Property.SecondaryApparentPower.Name[29SJG0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第2電力</value>
  </data>
  <data name="Property.SecondaryApparentPower.Definition[29SJG0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器の2次側へ出力される電力（VA: アンペア）。</value>
  </data>
  <data name="Property.MaximumApparentPower.Name[2FPnK0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>最大電力</value>
  </data>
  <data name="Property.MaximumApparentPower.Definition[2FPnK0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>皮相電力/容量 の最大値　（VA:アンペア）。</value>
  </data>
  <data name="Property.SecondaryCurrentType.Name[2Kn5_0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>第2電流タイプ</value>
  </data>
  <data name="Property.SecondaryCurrentType.Definition[2Kn5_0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>変圧器より出力される第2電流の種類の一覧。</value>
  </data>
  <data name="Property.ShortCircuitVoltage.Name[2Wi260qX4HuO00025QrE$V]" xml:space="preserve">
    <value>短絡電圧</value>
  </data>
  <data name="Property.ShortCircuitVoltage.Definition[2Wi260qX4HuO00025QrE$V]" xml:space="preserve">
    <value>%で与えられる変圧器の定格電流における短絡電圧の実数と虚数を定義する複素数。</value>
  </data>
  <data name="Property.RealImpedanceRatio.Name[2cfWA0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>インピーダンス実部比率</value>
  </data>
  <data name="Property.RealImpedanceRatio.Definition[2cfWA0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>零相インピーダンスと正相インピーダンス（例．短絡電圧の実部）の間の比率。N-コンダクターを含む三相トランスのために使用。</value>
  </data>
  <data name="Property.ImaginaryImpedanceRatio.Name[2ic_E0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>インピーダンス虚部比率</value>
  </data>
  <data name="Property.ImaginaryImpedanceRatio.Definition[2ic_E0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>零相インピーダンスと正相インピーダンス（例．短絡電圧の虚部）の間の比率。N-コンダクターを含む三相トランスのために使用。</value>
  </data>
  <data name="Property.TransformerVectorGroup.Name[20NDJ9E9n4bPj7DR5bMSk9]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.TransformerVectorGroup.Definition[20NDJ9E9n4bPj7DR5bMSk9]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.IsNeutralPrimaryTerminalAvailable.Name[3IAEq0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>中性点第1ターミナルがあるかどうか</value>
  </data>
  <data name="Property.IsNeutralPrimaryTerminalAvailable.Definition[3IAEq0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>一次巻線の中性点がターミナルの場合は（=TRUE）、違う場合は（= FALSE）として表示する</value>
  </data>
  <data name="Property.IsNeutralSecondaryTerminalAvailable.Name[3PJ$i0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>中性点第2ターミナルがあるかどうか</value>
  </data>
  <data name="Property.IsNeutralSecondaryTerminalAvailable.Definition[3PJ$i0qX4HuO00025QrE$V]" xml:space="preserve">
    <value>二次巻線の中性点がターミナルの場合は（=TRUE）、違う場合は（= FALSE）として表示する</value>
  </data>
  <data name="Property.EfficiencyCurve.Name[]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.EfficiencyCurve.Definition[]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.RadiativeFraction.Name[]" xml:space="preserve">
    <value />
  </data>
  <data name="Property.RadiativeFraction.Definition[]" xml:space="preserve">
    <value />
  </data>
</root>