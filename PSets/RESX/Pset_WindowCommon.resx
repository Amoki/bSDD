<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PSet.Name[2YCHW0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Pset_WindowCommon</value>
  </data>
  <data name="PSet.Definition[2YCHW0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Properties common to the definition of all occurrences of Window.</value>
  </data>
  <data name="Property.Reference.Name[2czSm0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="Property.Reference.Definition[2czSm0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as "construction type". It should be provided as an alternative to the name of the "object type", if the software does not support object types.</value>
  </data>
  <data name="Property.Status.Name[2iwwq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Property.Status.Definition[2iwwq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as "New" - element designed as new addition, "Existing" - element exists and remains, "Demolish" - element existed but is to be demolished,  "Temporary" - element will exists only temporary (like a temporary support structure).</value>
  </data>
  <data name="Property.AcousticRating.Name[2vS0M0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>AcousticRating</value>
  </data>
  <data name="Property.AcousticRating.Definition[2vS0M0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Acoustic rating for this object.It is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).</value>
  </data>
  <data name="Property.FireRating.Name[2$$dq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>FireRating</value>
  </data>
  <data name="Property.FireRating.Definition[2$$dq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Fire rating for this object.It is given according to the national fire safety classification.</value>
  </data>
  <data name="Property.SecurityRating.Name[36ZFI0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>SecurityRating</value>
  </data>
  <data name="Property.SecurityRating.Definition[36ZFI0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Index based rating system indicating security level.It is giving according to the national building code.</value>
  </data>
  <data name="Property.IsExternal.Name[]" xml:space="preserve">
    <value>IsExternal</value>
  </data>
  <data name="Property.IsExternal.Definition[]" xml:space="preserve">
    <value>Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.</value>
  </data>
  <data name="Property.Infiltration.Name[3J4Kq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Infiltration</value>
  </data>
  <data name="Property.Infiltration.Definition[3J4Kq0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown.</value>
  </data>
  <data name="Property.ThermalTransmittance.Name[3ORfU0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>ThermalTransmittance</value>
  </data>
  <data name="Property.ThermalTransmittance.Definition[3ORfU0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Thermal transmittance coefficient (U-Value) of a material.It applies to the total door construction.</value>
  </data>
  <data name="Property.GlazingAreaFraction.Name[3TCqk0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>GlazingAreaFraction</value>
  </data>
  <data name="Property.GlazingAreaFraction.Definition[3TCqk0qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Fraction of the glazing area relative to the total area of the filling element. It shall be used, if the glazing area is not given separately for all panels within the filling element.</value>
  </data>
  <data name="Property.HasSillExternal.Name[]" xml:space="preserve">
    <value>HasSillExternal</value>
  </data>
  <data name="Property.HasSillExternal.Definition[]" xml:space="preserve">
    <value>Indication whether the window opening has an external sill (TRUE) or not (FALSE).</value>
  </data>
  <data name="Property.HasSillInternal.Name[3gwD40qXWHuO00025QrE$V]" xml:space="preserve">
    <value>HasSillInternal</value>
  </data>
  <data name="Property.HasSillInternal.Definition[3gwD40qXWHuO00025QrE$V]" xml:space="preserve">
    <value>Indication whether the window opening has an internal sill (TRUE) or not (FALSE).</value>
  </data>
  <data name="Property.HasDrive.Name[]" xml:space="preserve">
    <value>HasDrive</value>
  </data>
  <data name="Property.HasDrive.Definition[]" xml:space="preserve">
    <value>Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)</value>
  </data>
  <data name="Property.SmokeStop.Name[]" xml:space="preserve">
    <value>SmokeStop</value>
  </data>
  <data name="Property.SmokeStop.Definition[]" xml:space="preserve">
    <value>Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).</value>
  </data>
  <data name="Property.FireExit.Name[]" xml:space="preserve">
    <value>FireExit</value>
  </data>
  <data name="Property.FireExit.Definition[]" xml:space="preserve">
    <value>Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE). Here it defines an exit window in accordance to the national building code.</value>
  </data>
</root>